OO Programming

class Instructor

  def initialize(name, salary)
    @name = name
    @salary = salary
  end

  def give_raise(raise)
    @salary = @salary + raise
  end

  def show_info
    puts "#{@name} makes $#{@salary}"
  end

end

arr = [Instructor.new("Ann", 100), Instructor.new("Paul", 100)]

arr.each{ |x| x.give_raise(100)}
arr.each{ |x| x.show_info}



Functional Programming

arr = [{name:"Ann", salary:100},{name:"Paul", salary:100}]

function updateSalary(instructor, raise){
  newInstructor = Object.assign({}, instructor)
  newInstructor.salary = instructor.salary + raise
  return newInstructor
}

function updateSalaries(instructors, raise){
  return instructors.map(instructor => updateSalary(instructor, raise))
}

newArr = updateSalaries(arr, 100)
console.log(newArr)
